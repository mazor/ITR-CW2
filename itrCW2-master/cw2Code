/* Encoder Library - Basic Example * http://www.pjrc.com/teensy/td_libs_Encoder.html * * This example code is in the public domain. */2#include <Encoder.h>3unsigned long time;4unsigned long timeInterval;int motorPin = 9;double pi = 3.14159;int sampleRate = 100;double Kp = 7.5;double Kd = 1.0;double et;double etd;double xd = 1.0;double Vout = 0;double Vsupply;double v9 = 0;double v11 = 0;int Vmot = 0;  double eNew;double eOld;5// Change these two numbers to the pins connected to your encoder.//   Best Performance: both pins have interrupt capability//   Good Performance: only the first pin has interrupt capability//   Low Performance:  neither pin has interrupt capabilityEncoder myEnc(2, 3);//   avoid using pins with LEDs attached6void setup() {  Serial.begin(115200);  Serial.println("Basic Encoder Test:");  timeInterval=50;  pinMode(motorPin, OUTPUT);  Vsupply=5;  eNew=0;eOld =0;}7long oldPosition  = -999;8void loop() {   //while ((millis()<5000)&&(sampleRate<=10000)){   // while ((sampleRate<=10000)){    if ((Kp>0)&&(Kp<=15)){int bt =micros();  int beginTime =micros();9   time = micros();   //  while ((sampleRate<=10000)){Serial.println(time);    // }  long newPosition = myEnc.read();10  if (newPosition != oldPosition) {    oldPosition = newPosition;  }   double newInRadians = newPosition*2*pi/(298*28);  double oldInRadians = oldPosition*2*pi/(298*28);  //while ((sampleRate<=10000)){Serial.println(newInRadians); // }  int endTime =micros();// sampleRate = endTime-beginTime;11  double angularVelocity = (newInRadians-oldInRadians) /(endTime-beginTime);eOld = et;et = xd - newInRadians;eNew = et;etd = (eNew-eOld) / (endTime-beginTime);12double Ct= Kp * et + Kd * etd; 13double temp =(255*Ct)/Vsupply;if (temp<0){  temp=0-temp;}  if (temp>Vsupply) {    temp=Vsupply;      } if (Ct>0){ //Ct should be less than 0 but it doesn't work if Ct<0  v9=temp;  v11=0;   // analogWrite(motorPin, Vmot / 4);  // analogRead values go from 0 to 1023, analogWrite values from 0 to 255 //   delay(timeInterval);  // digitalWrite(motorPin, HIGH); //analogWrite(motorPin, sampleRate); analogWrite(motorPin, v9); } else{  v11=temp;  v9=0;   //delay(timeInterval); // digitalWrite(motorPin, LOW);// analogWrite(motorPin, sampleRate); analogWrite(11, v11);14 //delay(timeInterval); } // analogWrite(motorPin, Vmot / 4);  // analogRead values go from 0 to 1023, analogWrite values from 0 to 255   // delay(timeInterval);  // digitalWrite(motorPin, HIGH); //analogWrite(motorPin, sampleRate);// analogWrite(motorPin, v9);// delay(timeInterval); // digitalWrite(motorPin, LOW);// analogWrite(motorPin, sampleRate);// analogWrite(11, v11);15// delay(timeInterval);int endt =micros();Serial.println("delta t");sampleRate= endt-bt;Serial.println(endt-bt);  }  //}16  }
